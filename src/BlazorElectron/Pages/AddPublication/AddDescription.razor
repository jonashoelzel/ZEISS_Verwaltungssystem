@page "/addDescription"
@using Zeiss.PublicationManager.Data.DataSet.Model
@using Zeiss.PublicationManager.Business.Logic.IO

@inject NavigationManager NavigationManager
@inject PublicationDataSetModel Publication
@inject DataHandler dataHandler

<img src="https://upload.wikimedia.org/wikipedia/commons/9/95/Zeiss_logo.svg" class="logo" />

@if (ShowSavePopup)
{
    <div class="modal fade show" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title w-100 text-center">Erfolgreich gespeichert</h3>
                </div>
                <div class="modal-body">
                    <p>Die Veröffentlichung wurde der Liste hinzugefügt.</p>
                    <button type="submit" id="backToLandingPage" class="form-control primaryButton" @onclick="@NavigateToLandingPage">Zurück zur Startseite</button>
                </div>
            </div>
        </div>
    </div>
}

<EditForm Model="@NewDescription" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />
    <section class="panel-default">
        <header class="panel-heading">
            <h4 class="panel-title">Zusätzliche Information</h4>
        </header>
        <div class="panel-body">
            <form>
                <div class="panel-object">
                    <label for="titleDescr">Beschreibung</label>
                    <InputText id="titleDescr" class="form-control" @bind-Value="@NewDescription.Description" />
                    <ValidationMessage For="@(() => NewDescription.Description)" />
                </div>
                <div class="panel-object">
                    <label for="textBox">Beschreibungstext</label>
                    <InputTextArea id="textBox" class="form-control" @bind-Value="@NewDescription.AdditionalInformation" rows="5" />
                    <ValidationMessage For="@(() => NewDescription.AdditionalInformation)" />
                </div>
            </form>
        </div>
    </section>

    <button class="primaryButton addPub" type="submit" @onclick="() => buttonType = ButtonType.save">Veröffentlichung hinzufügen</button>
    <button class="primaryButton back" type="button" @onclick="NavigateToPreviousScreen">Pflichtangaben</button>
    <button class="primaryButton continue" type="submit" @onclick="() => buttonType = ButtonType.next">
        <span class="fas fa-arrow-circle-right fa-3x"></span>
    </button>
</EditForm>

@code
{
    DescriptionModel NewDescription = new();
    ButtonType buttonType;

    private void NavigateToPreviousScreen()
    {
        updatePublication();
        NavigationManager.NavigateTo("addPublicationType");
    }

    private void NavigateToNextScreen()
    {
        updatePublication();

    }

    private void NavigateToLandingPage() => NavigationManager.NavigateTo("/");

    private void Save()
    {
        updatePublication();
        dataHandler.Save(Publication);
        PopupSuccessfulSave();
    }

    // Dialogfenster zum erfolgreichen Hinzufügen einer Veröffentlichung
    bool ShowSavePopup = false;
    private void PopupSuccessfulSave()
    {
        ShowSavePopup = true;
    }

    private void updatePublication()
    {
        Publication.Description = NewDescription.Description;
        Publication.AdditionalInformation = NewDescription.AdditionalInformation;
    }

    protected override void OnInitialized()
    {
        NewDescription.Description = Publication.Description;
        NewDescription.AdditionalInformation = Publication.AdditionalInformation;
        base.OnInitialized();
    }

    void ValidSubmit()
    {
        updatePublication();

        if (buttonType == ButtonType.next)
            NavigationManager.NavigateTo("addPublisher");
        else
        {
            dataHandler.Save(Publication);
            PopupSuccessfulSave();
        }

    }

    enum ButtonType { next, save}
}
