@page "/addTags"
@using Zeiss.PublicationManager.Data.DataSet.Model
@using Zeiss.PublicationManager.Business.Logic.IO
@using BlazorElectron.Data.DataLogic

@inject NavigationManager NavigationManager
@inject PublicationDataSetModel Publication
@inject DataHandler dataHandler
@inject WorkflowState workflowState

<img src="https://upload.wikimedia.org/wikipedia/commons/9/95/Zeiss_logo.svg" class="logo" />

@if (ShowSavePopup && workflowState.State == Data.DataLogic.State.Add)
{
    <div class="modal fade show" role="dialog" style="@modalDisplay">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title w-100 text-center">Erfolgreich gespeichert</h3>
                </div>
                <div class="modal-body">
                    <p>Die Veröffentlichung wurde der Liste hinzugefügt.</p>
                    <button type="submit" class="form-control primaryButton" @onclick="@NavigateToLandingPage">Zurück zur Startseite</button>
                </div>
            </div>
        </div>
    </div>
}
else if (ShowSavePopup && workflowState.State == Data.DataLogic.State.Edit)
{
    <div class="modal fade show" role="dialog" style="@modalDisplay">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title w-100 text-center">Erfolgreich gespeichert</h3>
                </div>
                <div class="modal-body">
                    <p>Die Änderungen wurden gespeichert.</p>
                    <button type="submit" class="form-control primaryButton" @onclick="@NavigateToLandingPage">Zurück zur Startseite</button>
                </div>
            </div>
        </div>
    </div>
}

<EditForm Model="@Publication">
    @if (workflowState.State == Data.DataLogic.State.Edit)
    {
        <div class="mode">
            <h2>Veröffentlichung bearbeiten</h2>
        </div>
    }
    else if (workflowState.State == Data.DataLogic.State.Add)
    {
        <div class="mode">
            <h2>Neue Veröffentlichung hinzufügen</h2>
        </div>
    }
    <section class="panel-default">
        <header class="panel-heading">
            <h4 class="panel-title">Tags</h4>
        </header>
        <div class="panel-body">
            @if (Tags != null)
            {
                foreach (var tag in Tags)
                {
                    <div class="form-check tags">
                        <input class="form-check-input" type="checkbox" id="@tag" />
                        <label class="form-check-label" for="@tag">@tag</label>
                    </div>
                }
            }
        </div>
    </section>

    @if (workflowState.State == Data.DataLogic.State.Edit)
    {
        <button class="primaryButton addPub" type="submit" @onclick="SavePublication">Änderungen Speichern</button>
    }
    else if (workflowState.State == Data.DataLogic.State.Add)
    {
        <button class="primaryButton addPub" type="submit" @onclick="SavePublication">Veröffentlichung hinzufügen</button>
    }
    <button class="primaryButton back" type="button" @onclick="NavigateToPreviousScreen">
        <span class="fas fa-arrow-circle-left fa-3x"></span>
    </button>

</EditForm>

@code
{
    bool ShowSavePopup = false;
    string modalDisplay = "display:block";
    private string[] Tags = new string[] { "Frontend", "Backend", "Development", ".NET 5.0", ".NET Core", ".NET Framework" };

    private void NavigateToPreviousScreen() => NavigationManager.NavigateTo("addPublisher");

    private void NavigateToLandingPage() => NavigationManager.NavigateTo("/SearchPublication");

    private void SavePublication()
    {
        try
        {
            modalDisplay = "display:block";
            ShowSavePopup = true;

            dataHandler.Save(Publication);
        }
        catch
        {
            OpenException();
        }
    }
}

@if (ShowException)
{
    <div class="modal fade show" role="dialog" style="@modalExceptionDisplay">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title w-100 text-center" style="font-size:16px">
                        Datei-Zugriffs-Berechtigungs-Fehler
                        <br />
                        <br />Die Datei:
                        <br />"@dataHandler.filePath";
                        <br />wird derzeit von einem anderen Programm verwendet
                        <br />oder Ihr Adminstrator hat Ihnen den Zugriff verwehrt.
                        <br />
                        <br />Sie können warten bis das andere Programm die Datei wieder freigegeben hat und den Vorgang wiederholen.
                        <br />
                        <br />Sollten Sie die Benachrichtigung nach meherern Versuchen immernoch sehen,
                        <br />fragen Sie Ihren Adminstator und prüfen Sie, ob die Datei derzeit von einem anderen Programm verwendet wird
                        <br />und prüfen Sie Ihre Berechtigungen.
                    </h3>
                    <button type="reset" class="cancelButton" @onclick="@CloseException">
                        <span class="fas fa-times fa-2x"></span>
                    </button>
                </div>
                <div class="modal-body">
                    <button type="submit" id="addButtonInPopup" class="form-control" @onclick="@Retry">Vorgang Wiederholen</button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    string modalExceptionDisplay = "display:block";
    bool ShowException = false;

    public void OpenException()
    {
        modalExceptionDisplay = "display:block";
        ShowException = true;
    }

    void CloseException()
    {
        ShowException = false;
        modalExceptionDisplay = "display:none";
    }

    void Retry()
    {
        try
        {
            SavePublication();
            CloseException();
        }
        catch
        {
            OpenException();
        }
    }
}
